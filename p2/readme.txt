The input trains.txt file is read line-by-line, where each line is represented by a train, with its corresponding direction, loading and crossing times being assigned to each of them. This information is saved into an overall train struct that holds the following train attributes: train number, priority, direction, loading time, crossing time and ready status. Each station, east and west, is represented by a priority queue. The priority queue is implemented using a linked list. Data for each node in the list is saved in a separate struct, where each node of the priority queue has the following attributes: priority, train data and a pointer to the next node in the list. 

There is a mutex for each of the east and west stations so that a train can not be queued concurrently by multiple threads. There is a mutex for the main track so that no trains are dispatched together to avoid a collision. There are two condition variables, one to signal when a train has been loaded after being created and the other to signal when a train is ready to cross the track.

A timer is used to track the simulation time of each train; this is achieved by appropriately sleeping the program for each load and cross interval. 
